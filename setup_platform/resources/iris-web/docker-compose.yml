services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: iriswebapp_rabbitmq
    restart: always
    networks:
      - iris_backend

  db:
    container_name: iriswebapp_db
    restart: always
    image: ghcr.io/dfir-iris/iriswebapp_db:v2.4.10
    entrypoint: /bin/bash
    command:
      - postgres_start_with_secrets.sh
    env_file:
      - environment.sh
    secrets:
      - POSTGRES_PASSWORD
      - POSTGRES_ADMIN_PASSWORD
    networks:
      - iris_backend
    volumes:
      - ./postgres_start_with_secrets.sh:/postgres_start_with_secrets.sh:ro,Z
      - db_data:/var/lib/postgresql/data

  app:
    container_name: iriswebapp_app
    entrypoint: /bin/bash
    command:
      - /iriswebapp_start_with_secrets.sh
    user: "65534"
    image: ghcr.io/dfir-iris/iriswebapp_app:v2.4.10
    volumes:
      - ./iriswebapp_start_with_secrets.sh:/iriswebapp_start_with_secrets.sh:ro,Z
      - ./certificates/rootCA/irisRootCACert.pem:/etc/irisRootCACert.pem:ro
      - ./certificates/:/home/iris/certificates/:ro
      - ./certificates/ldap/:/iriswebapp/certificates/ldap/:ro
      - iris-downloads:/home/iris/downloads
      - user_templates:/home/iris/user_templates
      - server_data:/home/iris/server_data
    restart: always
    depends_on:
      - "rabbitmq"
      - "db"
    env_file:
      - environment.sh
    secrets:
      - POSTGRES_PASSWORD
      - POSTGRES_ADMIN_PASSWORD
      - IRIS_SECRET_KEY
      - IRIS_SECURITY_PASSWORD_SALT
      - IRIS_ADM_PASSWORD
    networks:
      - iris_backend
      - main_network

  worker:
    container_name: iriswebapp_worker
    restart: always
    image: ghcr.io/dfir-iris/iriswebapp_app:v2.4.10
    entrypoint: /bin/bash
    command:
      - /worker_start_with_secrets.sh
    user: "65534"
    volumes:
      - ./worker_start_with_secrets.sh:/worker_start_with_secrets.sh:ro,Z
      - ./certificates/rootCA/irisRootCACert.pem:/etc/irisRootCACert.pem:ro
      - ./certificates/:/home/iris/certificates/:ro
      - ./certificates/ldap/:/iriswebapp/certificates/ldap/:ro
      - iris-downloads:/home/iris/downloads
      - user_templates:/home/iris/user_templates
      - server_data:/home/iris/server_data
    depends_on:
      - "rabbitmq"
      - "db"
      - "app"
    env_file:
      - environment.sh
    secrets:
      - POSTGRES_PASSWORD
      - POSTGRES_ADMIN_PASSWORD
      - IRIS_SECRET_KEY
      - IRIS_SECURITY_PASSWORD_SALT
    networks:
      - iris_backend

  nginx:
    container_name: iriswebapp-nginx
    image: ghcr.io/dfir-iris/iriswebapp_nginx:v2.4.10
    env_file:
      - environment.sh
    networks:
      - main_network
    ports:
      - 8443:8443
    volumes:
      - "./certificates/web_certificates/:/www/certs/:ro"
    restart: always
    depends_on:
      - "app"

volumes:
  iris-downloads: {}
  user_templates: {}
  server_data: {}
  db_data: {}

secrets:
  POSTGRES_PASSWORD:
    file: env.POSTGRES_PASSWORD.secret
  POSTGRES_ADMIN_PASSWORD:
    file: env.POSTGRES_ADMIN_PASSWORD.secret
  IRIS_SECRET_KEY:
    file: env.IRIS_SECRET_KEY.secret
  IRIS_SECURITY_PASSWORD_SALT:
    file: env.IRIS_SECURITY_PASSWORD_SALT.secret
  IRIS_ADM_PASSWORD:
    file: env.IRIS_ADM_PASSWORD.secret

networks:
  iris_backend:
    name: iris_backend
  iris_frontend:
    name: iris_frontend
  main_network:
    external: true
